@import "../../assets/stylesheets/variable.scss";
.btn{
    background-color: $primary-color !important;
    border-radius: 0;
    border:none;
    line-height: 1;
    font-size: 16px;
    font-family: $font-family-brand !important;
    font-weight:  $font-semibold !important;
    &:focus,&:active{
        border:none;
        outline:none;
        box-shadow: none;
    }        
}
.panel-first, .panel-second, .panel-third, .panel-fourth, .panel-fifth, .panel-sixth{
    width:100%;
    display: inline-block;
    @media screen and (max-width: $phone){
        padding-left:15px;
        padding-right:15px;
    }
    @media screen and (max-width: 1024px){
        padding-left:15px;
        padding-right:15px;
    }
}

.panel-header{
    padding-bottom: 55px;
}
.main-container{
    width:100%;
    max-width: 1200px;
    margin: 0 auto;
    padding-left:.5rem;
    padding-right: .5rem;
    @media screen and (max-width: $phone){
        padding-left:15px;
        padding-right:15px;
    }
    @media screen and (max-width: 1024px){
        padding-left:15px;
        padding-right:15px;
    }
}
.sphere-wrapper,app-sphere{
    width: 100%;
    height: 100%;
    overflow: hidden;
    position: absolute;
    top:0;
    right:0;
}

#particle-sphere {
    position: relative;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    transform-style: preserve-3d;
    perspective: 1000px;
    animation: rotate $time infinite linear;
}
.globe-wrap{
    position: absolute; 
    float: right;
    width: 70%;
    height: 900px;
    top:-100px;
    right:0; 
    overflow:hidden;
  
   app-globe{
    .js-globe{
        position: absolute;
        width: 100% !important;
        height: 100% !important;
        left:0;
     display: flex;
     align-items: center;
     justify-content: center;
     align-self: center;
     align-content: center;
     canvas{
        position: absolute;
        top:0; 
        width:100% !important;
        height:auto !important; 
       }
    }
   }
   
  }
@keyframes rotate {
    100% {
        transform: rotateY(360deg) rotateX(360deg);
    }
}

.c {
    position: absolute;
    width: $particle-size;
    height: $particle-size;
    border-radius: 50%;
    opacity: 0;
}

@for $i from 351 through 365 {
    $z: (random(360) * 1deg); // random angle to rotateZ
    $y: (random(360) * 1deg); // random to rotateX
    $hue: ((40/15 * $i) + $base-hue); // set hue
    body .c:nth-child(#{$i}) {
        background-color: hsla($hue, 0%, 85%, 1);
        opacity: 0 !important;
        animation: orbita3#{$i} 10s infinite !important;
        animation-delay: (368 - $i) * 1s !important;
    }
    @keyframes orbita3#{$i} {
        0% {
            opacity: 1;
            transform: rotateZ(-$z) rotateY($y) translateX($orb-size * 5) rotateZ($z); // form orb
        }
        20% {
            opacity: 1; // fade in
        }
        30% {
            transform: rotateZ(-$z) rotateY($y) translateX($orb-size * 3) rotateZ($z); // form orb
        }
        80% {
            transform: rotateZ(-$z) rotateY($y) translateX($orb-size) rotateZ($z); // hold orb state 30-80
            opacity: 1; // hold opacity 20-80
        }
        100% {
            transform: rotateZ(-$z) rotateY($y) translateX(($orb-size)) rotateZ($z); // translateX * 3
        }
    }
}

@for $i from 1 through $total {
    $z: (random(360) * 1deg); // random angle to rotateZ
    $y: (random(360) * 1deg); // random to rotateX
    $hue: ((40 / $total * $i) + $base-hue); // set hue
    .c:nth-child(#{$i}) {
        // grab the nth particle
        animation: orbit#{$i} 15s 1;
        animation-delay: ($i * 0.01s);
        background-color: hsla($hue, 0%, 84.6%, 1);
        opacity: 0;
    }
    @keyframes orbit#{$i} {
        20% {
            opacity: 1; // fade in
        }
        30% {
            transform: rotateZ(-$z) rotateY($y) translateX($orb-size) rotateZ($z); // form orb
        }
        80% {
            transform: rotateZ(-$z) rotateY($y) translateX($orb-size) rotateZ($z); // hold orb state 30-80
            opacity: 1; // hold opacity 20-80
        }
        100% {
            transform: rotateZ(-$z) rotateY($y) translateX(($orb-size)) rotateZ($z); // translateX * 3
        }
    }
}

@for $i from 1 through $total {
    $z: (random(360) * 1deg); // random angle to rotateZ
    $y: (random(360) * 1deg); // random to rotateX
    $hue: ((40 / $total * $i) + $base-hue); // set hue
    .c.active:nth-child(#{$i}) {
        animation: orbita#{$i} 3s 1 !important;
        transform: rotateZ(-$z) rotateY($y) translateX(($orb-size)) rotateZ($z);
        opacity: 1;
    }
    @keyframes orbita#{$i} {
        0% {
            opacity: 0;
        }
        100% {
            opacity: 1;
        }
    }
}

// =============================================================================================================

#__particles {
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: 1;
}

 .wave-section{
   overflow: hidden;
   width:100%;
   height:580px;
   canvas{
         width:100% !important;
         height:auto !important;
    }
 }
.partical-bg-wrap{
    position: fixed;
    top:0;
    left:auto;
    right: auto;
    width:100%;
    height:100%;
    overflow: hidden;
    z-index: -1;
}
@media screen and (max-width: $phone){

.globe-wrap{
    width:100%;
    height: 100% !important;
    top:-80px;
    app-globe{
        height: 100% !important;
            width:100% !important;
            position: absolute;
        .js-globe{
            justify-content: unset;
            height: 100% !important;
            width:100% !important;

        }
    }
  }
}
